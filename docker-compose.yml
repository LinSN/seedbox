version: "3.7"

services:   
    traefik:
        image: traefik
        container_name: traefik
        restart: always
        command: 
            - --certificatesresolvers.le.acme.email=${ACME_MAIL}
              #  - --pilot.token=${PILOT_TOKEN}
        ports:
            - "80:80"
            - "443:443"
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
            - ./traefik:/etc/traefik:ro
            - configtraefik:/config
        environment:
            - TRAEFIK_DOMAIN=${TRAEFIK_DOMAIN}
            - TZ=${TZ}
        labels:
            - "traefik.enable=true"
            # Docker labels for enabling Traefik dashboard
            - "traefik.http.routers.traefik.rule=Host(`traefik.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.routers.traefik.service=api@internal"
            - "traefik.http.routers.traefik.middlewares=google-oauth@file"
    
    forward-auth:
        image: thomseddon/traefik-forward-auth
        container_name: forward-auth
        environment:
        - PROVIDERS_GOOGLE_CLIENT_ID=${PROVIDERS_GOOGLE_CLIENT_ID}
        - PROVIDERS_GOOGLE_CLIENT_SECRET=${PROVIDERS_GOOGLE_CLIENT_SECRET}
        - COOKIE_SECRET=${COOKIE_SECRET}
        - DEFAULT_PROVIDER=google
        restart: always
            
    transmission:
        image: lscr.io/linuxserver/transmission
        container_name: transmission
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}
            - TRANSMISSION_WEB_HOME=/flood-for-transmission/ #optional
        volumes:
            - configtransmission:/config
            - downloads:/downloads
        ports:
            - 9091:9091
            - 51413:51413
            - 51413:51413/udp
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.transmission.rule=Host(`transmission.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.routers.transmission.middlewares=google-oauth@file"
        restart: unless-stopped

    plex:
        image: linuxserver/plex
        container_name: plex
        restart: always
        ports:
            - "32400:32400"
            - "32400:32400/udp"
        volumes:
            - configplex:/config
            - downloads:/downloads
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}
            - VERSION=docker
        labels:
            - "traefik.enable=true"
            - "traefik.http.services.plex.loadbalancer.server.port=32400"
            - "traefik.http.routers.plex.rule=Host(`plex.${TRAEFIK_DOMAIN}`)"

    sonarr:
        image: linuxserver/sonarr:develop
        container_name: sonarr
        restart: always
        volumes:
            - configsonarr:/config
            - downloads:/downloads
            - /etc/localtime:/etc/localtime:ro
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.sonarr.rule=Host(`sonarr.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.routers.sonarr.middlewares=google-oauth@file"

    radarr:
        image: linuxserver/radarr:develop
        container_name: radarr
        restart: always
        volumes:
            - configradarr:/config
            - downloads:/downloads
            - /etc/localtime:/etc/localtime:ro
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.radarr.rule=Host(`radarr.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.routers.radarr.middlewares=google-oauth@file"

    bazarr:
        image: linuxserver/bazarr
        container_name: bazarr
        restart: always
        volumes:
            - configbazarr:/config
            - downloads:/downloads
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.bazarr.rule=Host(`bazarr.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.routers.bazarr.middlewares=google-oauth@file"

    lidarr:
        image: linuxserver/lidarr:develop
        container_name: lidarr
        restart: always
        volumes:
            - configlidarr:/config
            - downloads:/downloads
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.lidarr.rule=Host(`lidarr.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.routers.lidarr.middlewares=google-oauth@file"

    tautulli:
        image: linuxserver/tautulli
        container_name: tautulli
        restart: always
        volumes:
            - configtautulli:/config
            - config:/logs:ro # Inside of tautulli, bind to logs via "/logs/Plex Media Server/Logs"
        environment:
            - PGID=${PGID}
            - PUID=${PUID}
            - TZ=${TZ}
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.tautulli.rule=Host(`tautulli.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.routers.tautulli.middlewares=google-oauth@file"


    portainer:
        image: portainer/portainer-ce
        container_name: portainer
        restart: always
        volumes:
            - /var/run/docker.sock:/var/run/docker.sock
        command: --admin-password ${PORTAINER_ADMIN_PASSWORD} --host=unix:///var/run/docker.sock
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.portainer.rule=Host(`portainer.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.services.portainer-seedbox.loadbalancer.server.port=9000"

    # flaresolverr:
    #     # DockerHub mirror flaresolverr/flaresolverr:latest
    #     image: 21hsmw/flaresolverr:nodriver
    #     container_name: flaresolverr
    #     environment:
    #         # Used to change the verbosity of the logging
    #         - LOG_LEVEL=info
    #         - DRIVER=nodriver
    #         - HOST=localhost
    #         # Enables hcaptcha-solver => https://github.com/JimmyLaurent/hcaptcha-solver
    #         - CAPTCHA_SOLVER=hcaptcha-solver
    #         # Enables CaptchaHarvester => https://github.com/NoahCardoza/CaptchaHarvester
    #         # - CAPTCHA_SOLVER=harvester
    #         # - HARVESTER_ENDPOINT=https://127.0.0.1:5000/token
    #     ports:
    #     - 8191:8191
    #     restart: unless-stopped 
    
    prowlarr:
        image: ghcr.io/linuxserver/prowlarr:develop
        container_name: prowlarr
        restart: unless-stopped
        environment:
            - PUID=${PUID}
            - PGID=${PGID}
        volumes:
            - configprowlarr:/config
        
        labels:
            - "traefik.enable=true"
            - "traefik.http.routers.prowlarr.rule=Host(`prowlarr.${TRAEFIK_DOMAIN}`)"
            - "traefik.http.routers.prowlarr.middlewares=google-oauth@file"


networks: 
  default: 
    external:
      name: "traefik-network"

volumes:
    alldata:
        driver: local-persist
        driver_opts:
            mountpoint: /data
    config:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config
    configtraefik:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/traefik
    configplex:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/Plex
    configsonarr: 
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/sonarr
    configradarr: 
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/radarr
    configbazarr:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/bazarr
    configlidarr:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/lidarr
    configtransmission: 
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/transmission
    configtautulli:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/tautulli
    configprowlarr:
        driver: local-persist
        driver_opts:
            mountpoint: /data/config/prowlarr
    downloads:
        driver: local-persist
        driver_opts:
            mountpoint: /data/downloads/
    backups:
        driver: local-persist
        driver_opts:
            mountpoint: /mnt/save
